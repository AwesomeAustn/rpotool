name: compile

on: [push, pull_request]

env:
  VERSION: 1.0.1
  FILE_PATH: src/*.c
  OUTPUT_NAME: rpotool
  CURL_URL: https://curl.se/windows/dl-8.8.0_2/curl-8.8.0_2-win64-mingw.zip
  CURL_PATH: C:\curl-8.8.0_2-win64-mingw

jobs:
  compile:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - macos-latest
          - windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Compile with gcc on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libcurl4-gnutls-dev
        gcc -o ${{ env.OUTPUT_NAME }} ${{ env.FILE_PATH }} -lz -lcurl
        mkdir output
        mv ${{ env.OUTPUT_NAME }} output/
        mv README.md output/

    - name: Compile with gcc on macOS ARM64
      if: matrix.os == 'macos-latest'
      run: |
        gcc -o ${{ env.OUTPUT_NAME }} ${{ env.FILE_PATH }} -lz -lcurl
        mkdir output
        mv ${{ env.OUTPUT_NAME }} output/
        mv README.md output/

    - name: Compile with gcc on macOS x64
      if: matrix.os == 'macos-13'
      run: |
        gcc -o ${{ env.OUTPUT_NAME }} ${{ env.FILE_PATH }} -lz -lcurl
        mkdir output
        mv ${{ env.OUTPUT_NAME }} output/
        mv README.md output/

    - name: Compile with gcc on Windows
      if: matrix.os == 'windows-latest'
      run: |
        curl -L ${{ env.CURL_URL }} -o curl.zip
        powershell Expand-Archive curl.zip -DestinationPath C:\
        gcc -o ${{ env.OUTPUT_NAME }}.exe ${{ env.FILE_PATH }} -I${{ env.CURL_PATH }}\include -L${{ env.CURL_PATH }}\lib -lcurl -lz
        mkdir output
        move ${{ env.OUTPUT_NAME }}.exe output/
        move README.md output/
        move ${{ env.CURL_PATH }}\bin\libcurl-x64.dll output/

    - name: Upload artifact on Linux
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-${{ env.VERSION }}-linux-x64
        path: ./output

    - name: Upload artifact on macOS x86_64
      if: matrix.os == 'macos-13'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-${{ env.VERSION }}-macos-x64
        path: ./output

    - name: Upload artifact on macOS ARM64
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-${{ env.VERSION }}-macos-arm64
        path: ./output

    - name: Upload artifact on Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-${{ env.VERSION }}-win-x64
        path: ./output
